## 1. 모든 브랜치에서 Push → build job 실행 (코드 빌드, 테스트, 취약점 검사)
# 2. main 브랜치에 Push 된 경우 → package job 실행 (이미지 빌드, 취약점 검사, 이미지 registry에 푸시)
name: commit-stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: ${{ github.sha }}

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: true
          severity-cutoff: high
          acs-report-enable: true

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Build, unit tests and integration tests
        run: |
          chmod +x gradlew
          ./gradlew :api:build

  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Build container image
        run: |
          chmod +x gradlew
          ./gradlew :api:bootBuildImage -PimageName=${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{env.VERSION}} 

      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image:
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true

      - name: CodeQL Initialize
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: hoonseung
          password: ${{ secrets.GHCR_PAT }}

      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Publish container image (latest)
        run: |
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

        
